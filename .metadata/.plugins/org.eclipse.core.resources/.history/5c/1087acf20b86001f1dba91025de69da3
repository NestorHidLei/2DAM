package actividad203.seguridad;

import java.util.Arrays;

public class CifraAESApp {

	private final static String MENSAJE_POR_DEFECTO = "Mensaje de prueba";
	private final static String[] PASSWORD_POR_DEFECTO = "pass123";
	

	public static void main(String[] args) {
		String mensaje = args.length > 0 ? args[0] : MENSAJE_POR_DEFECTO;
//		String mensaje = MENSAJE_POR_DEFECTO;
//		char[] password = PASSWORD_POR_DEFECTO;
//		if (args.length == 2) {
//			mensaje = args[0];
//			password = args[1].toCharArray();
//		} else if (args.length == 1) {
//			mensaje = args[0];
//		}
	}
	
//	public Key getClaveCifrado() throws NoSuchAlgorithmException, InvalidKeySpecException {
//		// preparamos la clave a utilizar HMAC
//		// Cojo una instancia de la f치brica de claves (est치 en la clase Util PBKDF2WithHmacSHA256)
//		SecretKeyFactory fabricaClave = SecretKeyFactory.getInstance(this.getInstanciaFabricaClave());
//		// Indico la PBE a utilizar con la clave, el salt, las iteraciones y el tama침o de clave
//		PBEKeySpec especificaClave = new PBEKeySpec(this.getPassword(), this.getSalt(),
//		this.getIterations(), this.getKeySize());
//		// Genero una clave secreta con el tipo de f치brica y las especificaciones de la clave
//		SecretKey claveSecreta = fabricaClave.generateSecret(especificaClave);
//		Key key = new SecretKeySpec(especificacionAES.getEncoded(), "AES");
//
//		return key;
//		}

}
