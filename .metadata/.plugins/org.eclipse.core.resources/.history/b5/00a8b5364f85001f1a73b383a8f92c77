package jframeApp;

import java.awt.EventQueue;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import conexion.Conexion;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import javax.swing.JTextArea;

public class SwingApp extends JFrame {

    private static final String SELECT_PELICULAS = "SELECT * FROM film;";
    private static final long serialVersionUID = 1L;
    private JPanel contentPane;

    // Campos de texto
    private JTextField txtFilmId;
    private JTextField txtTitle;
    private JTextField txtReleaseYear;
    private JTextField txtLanguageId;
    private JTextField txtOriginalLanguageId;
    private JTextField txtRentalDuration;
    private JTextField txtRentalRate;
    private JTextField txtLength;
    private JTextField txtReplacementCost;
    private JTextField txtRating;

    private ResultSet rs;
    private JTextArea txtSpecialFeatures;
    private JTextArea txtDescription;

    // Variable para almacenar la conexión y el cursor
    private Connection connect;

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    SwingApp frame = new SwingApp();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * Create the frame.
     */
    public SwingApp() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 804, 495);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);

        // Inicializa los componentes gráficos
        initializeComponents();

        // Carga los datos al iniciar la aplicación
        cargarDatos();
    }

    private void initializeComponents() {
        JLabel lblFilmId = new JLabel("Film ID:");
        JLabel lblTitle = new JLabel("Title:");
        JLabel lblDescription = new JLabel("Description:");
        JLabel lblReleaseYear = new JLabel("Release Year:");
        JLabel lblLanguageId = new JLabel("Language ID:");
        JLabel lblOriginalLanguageId = new JLabel("Original Language ID:");
        JLabel lblRentalDuration = new JLabel("Rental Duration:");
        JLabel lblRentalRate = new JLabel("Rental Rate:");
        JLabel lblLength = new JLabel("Length:");
        JLabel lblReplacementCost = new JLabel("Replacement Cost:");
        JLabel lblRating = new JLabel("Rating:");
        JLabel lblSpecialFeatures = new JLabel("Special Features:");

        // Campos de texto para cada campo de la película
        txtFilmId = new JTextField();
        txtFilmId.setEditable(false);
        txtFilmId.setColumns(10);

        txtTitle = new JTextField();
        txtTitle.setEditable(false);
        txtTitle.setColumns(10);

        txtReleaseYear = new JTextField();
        txtReleaseYear.setEditable(false);
        txtReleaseYear.setColumns(10);

        txtLanguageId = new JTextField();
        txtLanguageId.setEditable(false);
        txtLanguageId.setColumns(10);

        txtOriginalLanguageId = new JTextField();
        txtOriginalLanguageId.setEditable(false);
        txtOriginalLanguageId.setColumns(10);

        txtRentalDuration = new JTextField();
        txtRentalDuration.setEditable(false);
        txtRentalDuration.setColumns(10);

        txtRentalRate = new JTextField();
        txtRentalRate.setEditable(false);
        txtRentalRate.setColumns(10);

        txtLength = new JTextField();
        txtLength.setEditable(false);
        txtLength.setColumns(10);

        txtReplacementCost = new JTextField();
        txtReplacementCost.setEditable(false);
        txtReplacementCost.setColumns(10);

        txtRating = new JTextField();
        txtRating.setEditable(false);
        txtRating.setColumns(10);

        JButton btnPrimero = new JButton("Primero");
        btnPrimero.addActionListener(e -> mostrarPrimero());

        JButton btnAnterior = new JButton("Anterior");
        btnAnterior.addActionListener(e -> mostrarAnterior());

        JButton btnSiguiente = new JButton("Siguiente");
        btnSiguiente.addActionListener(e -> mostrarSiguiente());

        JButton btnUltimo = new JButton("Último");
        btnUltimo.addActionListener(e -> mostrarUltimo());

        txtDescription = new JTextArea();
        txtDescription.setWrapStyleWord(true);
        txtDescription.setLineWrap(true);

        txtSpecialFeatures = new JTextArea();
        txtSpecialFeatures.setWrapStyleWord(true);
        txtSpecialFeatures.setLineWrap(true);

        // Configuración del layout
        GroupLayout gl_contentPane = new GroupLayout(contentPane);
        gl_contentPane.setHorizontalGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
                .addGroup(gl_contentPane.createSequentialGroup()
                        .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
                                .addGroup(gl_contentPane.createSequentialGroup().addContainerGap(33, Short.MAX_VALUE)
                                        .addComponent(btnPrimero, GroupLayout.PREFERRED_SIZE, 98,
                                                GroupLayout.PREFERRED_SIZE)
                                        .addGap(86)
                                        .addComponent(btnAnterior, GroupLayout.PREFERRED_SIZE, 98,
                                                GroupLayout.PREFERRED_SIZE)
                                        .addGap(111)
                                        .addComponent(btnSiguiente, GroupLayout.PREFERRED_SIZE, 98,
                                                GroupLayout.PREFERRED_SIZE)
                                        .addGap(118)
                                        .addComponent(btnUltimo, GroupLayout.PREFERRED_SIZE, 98,
                                                GroupLayout.PREFERRED_SIZE))
                                .addGroup(gl_contentPane.createSequentialGroup().addGap(18)
                                        .addGroup(gl_contentPane
                                                .createParallelGroup(Alignment.LEADING)
                                                .addComponent(lblDescription)
                                                .addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING)
                                                        .addGroup(gl_contentPane.createSequentialGroup()
                                                                .addGroup(gl_contentPane
                                                                        .createParallelGroup(Alignment.LEADING)
                                                                        .addComponent(lblFilmId)
                                                                        .addComponent(lblTitle)
                                                                        .addComponent(lblReleaseYear)
                                                                        .addComponent(lblLanguageId))
                                                                .addGap(55))
                                                        .addGroup(gl_contentPane.createSequentialGroup()
                                                                .addComponent(lblOriginalLanguageId)
                                                                .addGap(18))))
                                        .addGap(18)
                                        .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
                                                .addComponent(txtDescription)
                                                .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING, false)
                                                        .addComponent(txtOriginalLanguageId)
                                                        .addComponent(txtLanguageId)
                                                        .addComponent(txtReleaseYear)
                                                        .addComponent(txtTitle)
                                                        .addComponent(txtFilmId, GroupLayout.DEFAULT_SIZE, 226,
                                                                Short.MAX_VALUE)))
                                        .addGap(43)
                                        .addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING)
                                                .addGroup(gl_contentPane.createSequentialGroup()
                                                        .addGroup(gl_contentPane
                                                                .createParallelGroup(Alignment.LEADING)
                                                                .addComponent(lblRentalRate)
                                                                .addComponent(lblRentalDuration)
                                                                .addComponent(lblLength))
                                                        .addGap(34))
                                                .addGroup(gl_contentPane.createSequentialGroup()
                                                        .addGroup(gl_contentPane
                                                                .createParallelGroup(Alignment.LEADING)
                                                                .addComponent(lblReplacementCost)
                                                                .addComponent(lblSpecialFeatures)
                                                                .addComponent(lblRating))
                                                        .addGap(18)))
                                        .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
                                                .addComponent(txtSpecialFeatures)
                                                .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING, false)
                                                        .addComponent(txtRating)
                                                        .addComponent(txtReplacementCost)
                                                        .addComponent(txtLength)
                                                        .addComponent(txtRentalRate)
                                                        .addComponent(txtRentalDuration, GroupLayout.DEFAULT_SIZE,
                                                                218, Short.MAX_VALUE)))
                                        .addGap(8)))
                        .addContainerGap(30, GroupLayout.PREFERRED_SIZE)));
        gl_contentPane.setVerticalGroup(gl_contentPane.createParallelGroup(Alignment.LEADING).addGroup(gl_contentPane
                .createSequentialGroup().addGap(69)
                .addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING, false).addGroup(gl_contentPane
                        .createParallelGroup(Alignment.LEADING)
                        .addGroup(gl_contentPane.createSequentialGroup()
                                .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE).addComponent(lblFilmId)
                                        .addComponent(txtFilmId, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                                GroupLayout.PREFERRED_SIZE))
                                .addGap(18)
                                .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE).addComponent(lblTitle)
                                        .addComponent(txtTitle, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                                GroupLayout.PREFERRED_SIZE))
                                .addGap(18)
                                .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)
                                        .addComponent(lblReleaseYear)
                                        .addComponent(txtReleaseYear, GroupLayout.PREFERRED_SIZE,
                                                GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(18)
                                .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE).addComponent(lblLanguageId)
                                        .addComponent(txtLanguageId, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                                GroupLayout.PREFERRED_SIZE)))
                        .addGroup(gl_contentPane.createSequentialGroup()
                                .addComponent(lblRentalDuration)
                                .addGap(18)
                                .addComponent(lblRentalRate)
                                .addGap(18)
                                .addComponent(lblLength)))
                        .addGroup(gl_contentPane.createSequentialGroup()
                                .addComponent(txtRentalDuration, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                        GroupLayout.PREFERRED_SIZE)
                                .addGap(18)
                                .addComponent(txtRentalRate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                        GroupLayout.PREFERRED_SIZE)
                                .addGap(18)
                                .addComponent(txtLength, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                        GroupLayout.PREFERRED_SIZE)))
                .addGap(27)
                .addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
                        .addGroup(gl_contentPane.createSequentialGroup()
                                .addComponent(lblReplacementCost)
                                .addGap(18)
                                .addComponent(lblSpecialFeatures)
                                .addGap(18)
                                .addComponent(lblRating))
                        .addGroup(gl_contentPane.createSequentialGroup()
                                .addComponent(txtReplacementCost, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                        GroupLayout.PREFERRED_SIZE)
                                .addGap(18)
                                .addComponent(txtSpecialFeatures, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                        GroupLayout.PREFERRED_SIZE)
                                .addGap(18)
                                .addComponent(txtRating, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
                                        GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)
                        .addComponent(btnPrimero)
                        .addComponent(btnAnterior)
                        .addComponent(btnSiguiente)
                        .addComponent(btnUltimo))
                .addContainerGap()));
        contentPane.setLayout(gl_contentPane);
    }

    private void cargarDatos() {
        try {
            // Crear la conexión y obtener el ResultSet una sola vez
            connect = Conexion.getConnection();
            PreparedStatement stmt = connect.prepareStatement(SELECT_PELICULAS);
            rs = stmt.executeQuery();

            if (rs.next()) {
                mostrarDatos();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void mostrarDatos() {
        try {
            // Cargar datos del ResultSet a los campos de texto
            txtFilmId.setText(rs.getString("film_id"));
            txtTitle.setText(rs.getString("title"));
            txtDescription.setText(rs.getString("description"));
            txtReleaseYear.setText(rs.getString("release_year"));
            txtLanguageId.setText(rs.getString("language_id"));
            txtOriginalLanguageId.setText(rs.getString("original_language_id"));
            txtRentalDuration.setText(rs.getString("rental_duration"));
            txtRentalRate.setText(rs.getString("rental_rate"));
            txtLength.setText(rs.getString("length"));
            txtReplacementCost.setText(rs.getString("replacement_cost"));
            txtRating.setText(rs.getString("rating"));
            txtSpecialFeatures.setText(rs.getString("special_features"));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void mostrarPrimero() {
        try {
            // Volver al primer registro y mostrar los datos
            rs.first();
            mostrarDatos();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void mostrarSiguiente() {
        try {
            if (rs.next()) {
                mostrarDatos();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void mostrarAnterior() {
        try {
            if (rs.previous()) {
                mostrarDatos();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void mostrarUltimo() {
        try {
            rs.last();
            mostrarDatos();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
