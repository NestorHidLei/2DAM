package jframeApp;

import java.awt.EventQueue;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import conexion.Conexion;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextArea;

public class SwingApp2 extends JFrame {

	private static final String SELECT_PELICULAS = "SELECT * FROM film;";
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField txtFilmId, txtTitle, txtReleaseYear, txtLanguageId, txtOriginalLanguageId;
	private JTextField txtRentalDuration, txtRentalRate, txtLength, txtReplacementCost, txtRating;
	private ResultSet rs;
	private JTextArea txtSpecialFeatures, txtDescription;

	public static void main(String[] args) {
		EventQueue.invokeLater(() -> {
			try {
				SwingApp frame = new SwingApp();
				frame.setVisible(true);
			} catch (Exception e) {
				e.printStackTrace();
			}
		});
	}

	public SwingApp2() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 804, 495);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);

		// Inicializar etiquetas y campos de texto
		initComponents();

		// Botones de navegación
		initButtons();

		// Cargar los datos iniciales de la tabla film
		cargarPeliculas();
	}

	private void initComponents() {
		JLabel lblFilmId = new JLabel("Film ID:");
		JLabel lblTitle = new JLabel("Title:");
		JLabel lblDescription = new JLabel("Description:");
		JLabel lblReleaseYear = new JLabel("Release Year:");
		JLabel lblLanguageId = new JLabel("Language ID:");
		JLabel lblOriginalLanguageId = new JLabel("Original Language ID:");
		JLabel lblRentalDuration = new JLabel("Rental Duration:");
		JLabel lblRentalRate = new JLabel("Rental Rate:");
		JLabel lblLength = new JLabel("Length:");
		JLabel lblReplacementCost = new JLabel("Replacement Cost:");
		JLabel lblRating = new JLabel("Rating:");
		JLabel lblSpecialFeatures = new JLabel("Special Features:");

		// Campos de texto
		txtFilmId = new JTextField(); txtFilmId.setEditable(false); txtFilmId.setColumns(10);
		txtTitle = new JTextField(); txtTitle.setEditable(false); txtTitle.setColumns(10);
		txtReleaseYear = new JTextField(); txtReleaseYear.setEditable(false); txtReleaseYear.setColumns(10);
		txtLanguageId = new JTextField(); txtLanguageId.setEditable(false); txtLanguageId.setColumns(10);
		txtOriginalLanguageId = new JTextField(); txtOriginalLanguageId.setEditable(false); txtOriginalLanguageId.setColumns(10);
		txtRentalDuration = new JTextField(); txtRentalDuration.setEditable(false); txtRentalDuration.setColumns(10);
		txtRentalRate = new JTextField(); txtRentalRate.setEditable(false); txtRentalRate.setColumns(10);
		txtLength = new JTextField(); txtLength.setEditable(false); txtLength.setColumns(10);
		txtReplacementCost = new JTextField(); txtReplacementCost.setEditable(false); txtReplacementCost.setColumns(10);
		txtRating = new JTextField(); txtRating.setEditable(false); txtRating.setColumns(10);

		txtDescription = new JTextArea();
		txtSpecialFeatures = new JTextArea();

		// Configurar el layout del panel
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		configureLayout(gl_contentPane, lblFilmId, lblTitle, lblDescription, lblReleaseYear, lblLanguageId, lblOriginalLanguageId, lblRentalDuration, lblRentalRate, lblLength, lblReplacementCost, lblRating, lblSpecialFeatures);
		contentPane.setLayout(gl_contentPane);
	}

	private void initButtons() {
		JButton btnPrimero = new JButton("Primero");
		btnPrimero.addActionListener(e -> navegarRegistros("first"));

		JButton btnAnterior = new JButton("Anterior");
		btnAnterior.addActionListener(e -> navegarRegistros("previous"));

		JButton btnSiguiente = new JButton("Siguiente");
		btnSiguiente.addActionListener(e -> navegarRegistros("next"));

		JButton btnultimo = new JButton("Último");
		btnultimo.addActionListener(e -> navegarRegistros("last"));
	}

	private void configureLayout(GroupLayout gl_contentPane, JLabel... labels) {
		// Aquí configuras el layout como lo tienes, pero modularizando el código
	}

	private void cargarPeliculas() {
		try (Connection connect = Conexion.conectar()) {
			PreparedStatement st = connect.prepareStatement(SELECT_PELICULAS, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
			rs = st.executeQuery();
			if (rs.first()) {
				mostrarPelicula();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	private void mostrarPelicula() {
		try {
			if (rs != null && !rs.isClosed()) {
				txtFilmId.setText(rs.getString("film_id"));
				txtTitle.setText(rs.getString("title"));
				txtDescription.setText(rs.getString("description"));
				txtReleaseYear.setText(rs.getString("release_year"));
				txtLanguageId.setText(rs.getString("language_id"));
				txtOriginalLanguageId.setText(rs.getString("original_language_id"));
				txtRentalDuration.setText(rs.getString("rental_duration"));
				txtRentalRate.setText(rs.getString("rental_rate"));
				txtLength.setText(rs.getString("length"));
				txtReplacementCost.setText(rs.getString("replacement_cost"));
				txtRating.setText(rs.getString("rating"));
				txtSpecialFeatures.setText(rs.getString("special_features"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	private void navegarRegistros(String direction) {
		try {
			if (rs != null) {
				switch (direction) {
					case "first": if (rs.first()) mostrarPelicula(); break;
					case "previous": if (rs.previous()) mostrarPelicula(); break;
					case "next": if (rs.next()) mostrarPelicula(); break;
					case "last": if (rs.last()) mostrarPelicula(); break;
				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}
